

네트워크
-> 통신

DataBase <-----> Server <---> client(app,web,...)

Local DataBase 의 한계
- 동기화가 어렵다 (핸드폰,태블릿,PC 등의 기기 간의 데이터 공유가 어렵다.)
- 상호작용이 불가능 하다. (댓글 기능 같은것들은 네트워크(서버)에 저장해야 한다.)

서버와 통신하는 방법
- 해당 url 로 요청한다
- 인증정보를 보낸다.
- JSON 형식을 사용해서 data를 보낸다.
- Javascript Object Notation -> Javascript에서 객체를 만들 때 사용하는 표현식이다.
- [] -> List
- {} -> 객체
    -> "" -> 문자열
    -> ""없으면 -> 숫자
[
    {
        "id": 1, -> 숫자가 정확히 어떠한 자료형인지는 문서에 보면 다 써있다.
        "name": "홍길동",
        "age": 20,
        "intro": "나는 홍길동이다!"
    },
    {
        "id": 2,
        "name": "김아무개",
        "age": 10,
        "intro": "난 김아무개 입니다 :)"
    }
]

Json Parsing
-> Json을 코틀린이나 자바가 이해할 수 있게 변형하는 과정

Serializable(직렬화)
-> 자바 시스템 내부에서 사용되는 object를 외부에서 사용할 수 있도록 byte 형태로 데이터를 바꾸는 것

직렬화 설명
id , name , age , intro //위의 제이슨 데이터에서 넘어오는 데이터 종류

코틀린이나 자바가 이해할 수 있는 툴
class Person(
    var id : Int? = null
    var bane : String? = null
    var age : Int? = null
    var intro : String? = null
)

Person(1,"김아무개",20,"안녕하세요") //즉 우리는 위의 JSON형식의 데이터를 받기 위해 Person 클래스만 정의해주면 된다.
그러면 알아서 직렬화를 해준다.

Request Type
- GET -> 정보 요청
- POST -> 정보 추가 요청
- DELETE -> 정보 삭제 요청
- PUT -> 정보 수정 요청

Status Code
- 200번대 -> (대부분) 처리가 잘 됐다.
- 400번대 -> 오류발생


